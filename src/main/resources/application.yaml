
  spring:

    # Database
    datasource:
      url: ${DATABASE_URL}
      driver-class-name: ${DATABASE_CLASS_NAME}
      username: ${DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}

    # JPA
    jpa:
      hibernate:
        ddl-auto: update
      generate-ddl: false
      show-sql: true


    # application
    profiles:
      include: API-KEY, AWS

    mvc:
      hiddenmethod:
        filter:
          enabled: true

    # MultipartFile
    servlet:
      multipart:
        max-file-size: ${MULTIPART_FILE_MAX_SIZE}
        max-request-size: ${MULTIPART_FILE_MAX_REQUEST}

    #Google SMTP
    mail:
      host: ${SMTP_HOST}
      port: ${SMTP_PORT}
      username: ${SMTP_USERNAME}
      password: ${SMTP_PASSWORD}
      auth-code-expiration-millis: ${SMTP_AUTH_EXPIRE}
      properties:
        mail.smtp:
          auth: true
          timeout: ${SMTP_TIMEOUT}
          writetimeout: ${SMTP_WRITE_TIMEOUT}
          connectiontimeout: ${SMTP_CONN_TIMEOUT}
          starttls.enable: true
          debug.enable: true



  #LOG
  logging.level:
    org.hibernate:
      SQL: debug
      type: debug
    root: info
    donguri.jejudorang: debug


  #JWT
  jwt:
    expiration-time:
      access: ${JWT_ACCESS_TOKEN}
      refresh: ${JWT_REFRESH_TOKEN}
    cookie-expire: ${JWT_COOKIE}


  #Cookie
  view:
    cookie-expire: ${VIEW_COOKIE}


  #Redis
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    email-code:
      expired: ${REDIS_EMAIL_CODE}


  #Jeju API
  jeju:
    uri: ${JEJU_URI}
    key: ${JEJU_API_KEY}


  #Kakao
  kakao:
    key: ${KAKAO_API_KEY}


  #AWS
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY}
      secretKey: ${AWS_SECRET_KEY}
    stack.auto: false
    s3:
      bucket:
        name: ${S3_BUCKET}
        url: ${S3_BUCKET_URL}
      region: ${S3_REGION}

